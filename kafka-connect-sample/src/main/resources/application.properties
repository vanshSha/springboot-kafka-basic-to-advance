spring.application.name=kafka-connect-sample

# Logging format
logging.pattern.console=[Kafka Stream] %clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(---){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

spring.main.banner-mode=off
spring.main.log-startup-info=false
spring.kafka.listener.missing-topics-fatal=false


spring.kafka.consumer.group-id=kafka-connect-sample
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# this is kafkaStreamConfig
spring.kafka.streams.application-id=kafka-connect-sample-${random.uuid}
spring.kafka.streams.bootstrap-servers=localhost:9092
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.commit.interval.ms=3000
spring.kafka.streams.processing.guarantee=exactly_once_v2
